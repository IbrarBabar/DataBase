7.1 Write a script to find sum of the numbers given as a string.
$input = “1,2,3,4,5,6,7”;
------------------------------------------------
Solution:

<?php
$input = "1,2,3,4,5";
echo "The string (digits) is :: ". $input . "<br />";
$array = explode(',', $input);
$count=0;
for($i=0;$i<count($array);$i++)
{
    $count+=$array[$i];
}
echo "The sum of digits of string is :: ". $count;
echo "<br />";
?>

==================================================================================================
7.2 Remove the last occurrence of “89” from the following string.
$input = “A89C89”;
-------------------------------------------
SOLUTION::

<?php
$input="A89C89";
$c=0;
$arr = str_split($input);
echo "Before Deletion (89) the string is :: ";
foreach($arr as $value)
{
    echo $value . " ";
}

for($loop=0;$loop<count($arr);$loop++)
{
    if($arr[$loop]==8 && $arr[$loop+1]==9)
    {
        $c=$c+1;
        if($c==2)
        {
            if($arr[$loop]==8 && $arr[$loop+1]==9)
            {
                unset($arr[$loop]);
                unset($arr[$loop+1]);
            }
        }
    }
}
echo  "<br />"."<br />";
echo "After Deletion 89 the string is :: ";
foreach($arr as $value)
{
    echo $value . " ";
}

====================================================================================================================
7.3 Create a form which contains the following field as shown in below figure.
User should be able to submit the form. (using GET method). Upon submitting the form these
submitted fields must be inserted in the themepark (database) that we have used throughout the
labs.
------------------------------------------------
Solution::

<html>
<head>
    <title>Registration Form</title>
</head>
<body>
<?php if (isset($_GET['form_submitted'])){
//this code is executed when the form is submitted
?>
<h2>Thank You <?php echo "For registring Themepark"; ?> </h2>
<p>You have been registered as
    <?php echo "<br />";  ?>
    <?php echo "Park_Code : " . $_GET['Park_Code'] . '   '.  "Park_Name : " . $_GET['Park_Name'];?>
    <?php echo "<br />";  ?>
    <?php echo  "Park_City : " . $_GET['Park_City'] . '   ' .  "Park_Country : " . $_GET['Park_Country'];


    $username = 'root';
    $password = '';
    try {
        $conn = new PDO("mysql:host=localhost;dbname=themepark", $username, $password);
// set the PDO error mode to exception
        $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
        echo "Connected successfully";
    } catch (PDOException $e) {
        echo "Connection failed: " . $e->getMessage();
    }

    $Park_Code = $_GET["Park_Code"];
    $Park_Name = $_GET["Park_Name"];
    $Park_City = $_GET["Park_City"];
    $Park_Country = $_GET["Park_Country"];

    $conn->query("insert into themepark values('$Park_Code ',' $Park_Name ',' $Park_City ',' $Park_Country')");
    
</p>
<p>Go <a href="/database/task1.php">back</a> to the form</p>
<?php }
else { ?>
    <h2>Theme Park Registration</h2>
    <form action="task1.php" method="GET">
        Park_code:
        <input type="text"  placeholder="Park Code" name="Park_Code">
         Park Name:
        <input type="text" placeholder="Park Name" name="Park_Name">
        <br> Park City:
        <input type="text" placeholder="Park City" name="Park_City">
         Park Country:
        <input type="text" placeholder="Park Country" name="Park_Country">
        <input type="hidden" name="form_submitted" value="1" />
        <br>
        <input type="submit" value="Submit">
    </form>
<?php } ?>
</body>
</html>

